CREATE TABLE PROJECT(
ID INTEGER PRIMARY KEY AUTO_INCREMENT,
TITLE varchar(255) NOT NULL,
DESCRIPTION varchar(1000),
START_DATE DATE,
END_DATE DATE,
DUE_DATE DATE,
STATUS varchar(50),
PRIORITY varchar(50)
);

ALTER TABLE PROJECT ADD COLUMN CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP;
ALTER TABLE PROJECT ADD COLUMN UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP;

INSERT INTO `backend_engineering`.`project` (`TITLE`, `DESCRIPTION`, `START_DATE`, `STATUS`, `PRIORITY`) VALUES ('BENCH', 'Default project for newly joined team members', '2000-01-01', 'INPROGRESS', 'MEDIUM');
COMMIT;

CREATE TABLE USER(
ID INTEGER PRIMARY KEY AUTO_INCREMENT,
FIRST_NAME VARCHAR(255) NOT NULL,
LAST_NAME VARCHAR(255) NOT NULL,
EMAIL VARCHAR(255) NOT NULL,
PASSWORD VARCHAR(255) NOT NULL,
ROLE VARCHAR(255) DEFAULT "REGULAR",
STATUS VARCHAR(255) DEFAULT "ACTIVE",
CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

INSERT INTO `backend_engineering`.`user` (`FIRST_NAME`, `LAST_NAME`, `EMAIL`, `PASSWORD`, `ROLE`, `STATUS`) VALUES ('Lohith', 'M', 'lohith.mudu@gmail.com', 'password', 'admin', 'active');

CREATE TABLE TASK(
ID INTEGER PRIMARY KEY AUTO_INCREMENT,
TITLE VARCHAR(255) NOT NULL,
DESCRIPTION VARCHAR(1000),
CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
DUE_DATE DATE,
STATUS varchar(50),
PRIORITY varchar(50),
ASSIGNED_TO INTEGER,
ASSIGNED_BY INTEGER,
PROJECT_ID INTEGER,
FOREIGN KEY (ASSIGNED_TO) REFERENCES USER(ID),
FOREIGN KEY (ASSIGNED_BY) REFERENCES USER(ID),
FOREIGN KEY (PROJECT_ID) REFERENCES PROJECT(ID)
);

INSERT INTO `backend_engineering`.`task` (`TITLE`, `DESCRIPTION`, `STATUS`, `PRIORITY`, `ASSIGNED_TO`, `ASSIGNED_BY`, `PROJECT_ID`) VALUES ('Access Requests', 'Raise required access requests for the project', 'TO-DO', 'MEDIUM', '1', '1', '1');

CREATE TABLE TASK_COMMENT_ATTACHMENT(
ID INTEGER PRIMARY KEY AUTO_INCREMENT,
COMMENT VARCHAR(1000),
ATTACHMENT BLOB,
TASK_ID INTEGER,
USER_ID INTEGER,
FOREIGN KEY (USER_ID) REFERENCES USER(ID),
FOREIGN KEY (TASK_ID) REFERENCES TASK(ID)
);

INSERT INTO `backend_engineering`.`task_comment_attachment` (`COMMENT`, `TASK_ID`, `USER_ID`) VALUES ('Test Comment', '1', '1');
